
General.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008d6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001e4  00800060  000008d6  0000094a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000b2e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b60  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000c0  00000000  00000000  00000b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001ee8  00000000  00000000  00000c5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000807  00000000  00000000  00002b44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b96  00000000  00000000  0000334b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000148  00000000  00000000  00003ee4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004ac  00000000  00000000  0000402c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000f6c  00000000  00000000  000044d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00005444  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	12 e0       	ldi	r17, 0x02	; 2
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ed       	ldi	r30, 0xD6	; 214
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 34       	cpi	r26, 0x44	; 68
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 49 02 	call	0x492	; 0x492 <main>
  7a:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <storyTell>:
  82:	80 e4       	ldi	r24, 0x40	; 64
  84:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  88:	8f e6       	ldi	r24, 0x6F	; 111
  8a:	97 e1       	ldi	r25, 0x17	; 23
  8c:	01 97       	sbiw	r24, 0x01	; 1
  8e:	f1 f7       	brne	.-4      	; 0x8c <storyTell+0xa>
  90:	00 c0       	rjmp	.+0      	; 0x92 <storyTell+0x10>
  92:	00 00       	nop
  94:	80 e0       	ldi	r24, 0x00	; 0
  96:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  9a:	83 e0       	ldi	r24, 0x03	; 3
  9c:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  a0:	84 e0       	ldi	r24, 0x04	; 4
  a2:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  a6:	88 e0       	ldi	r24, 0x08	; 8
  a8:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  ac:	88 e0       	ldi	r24, 0x08	; 8
  ae:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  b2:	88 e0       	ldi	r24, 0x08	; 8
  b4:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  b8:	84 e0       	ldi	r24, 0x04	; 4
  ba:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  be:	83 e0       	ldi	r24, 0x03	; 3
  c0:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  c4:	80 e0       	ldi	r24, 0x00	; 0
  c6:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  ca:	88 e1       	ldi	r24, 0x18	; 24
  cc:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  d0:	84 e0       	ldi	r24, 0x04	; 4
  d2:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  d6:	82 e0       	ldi	r24, 0x02	; 2
  d8:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  dc:	82 e0       	ldi	r24, 0x02	; 2
  de:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  e2:	82 e0       	ldi	r24, 0x02	; 2
  e4:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  e8:	84 e0       	ldi	r24, 0x04	; 4
  ea:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  ee:	88 e1       	ldi	r24, 0x18	; 24
  f0:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  f4:	83 e0       	ldi	r24, 0x03	; 3
  f6:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
  fa:	85 e0       	ldi	r24, 0x05	; 5
  fc:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 100:	89 e0       	ldi	r24, 0x09	; 9
 102:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 112:	82 e0       	ldi	r24, 0x02	; 2
 114:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 118:	82 e0       	ldi	r24, 0x02	; 2
 11a:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 11e:	82 e0       	ldi	r24, 0x02	; 2
 120:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 124:	88 e1       	ldi	r24, 0x18	; 24
 126:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 12a:	84 e1       	ldi	r24, 0x14	; 20
 12c:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 130:	82 e1       	ldi	r24, 0x12	; 18
 132:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 136:	80 e1       	ldi	r24, 0x10	; 16
 138:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 13c:	80 e1       	ldi	r24, 0x10	; 16
 13e:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 142:	88 e0       	ldi	r24, 0x08	; 8
 144:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 148:	88 e0       	ldi	r24, 0x08	; 8
 14a:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 14e:	88 e0       	ldi	r24, 0x08	; 8
 150:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 154:	84 e0       	ldi	r24, 0x04	; 4
 156:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 15a:	8e e0       	ldi	r24, 0x0E	; 14
 15c:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 160:	84 e0       	ldi	r24, 0x04	; 4
 162:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 16c:	82 e0       	ldi	r24, 0x02	; 2
 16e:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 172:	84 e0       	ldi	r24, 0x04	; 4
 174:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 178:	84 e0       	ldi	r24, 0x04	; 4
 17a:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 17e:	84 e0       	ldi	r24, 0x04	; 4
 180:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 184:	84 e0       	ldi	r24, 0x04	; 4
 186:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 18a:	8e e0       	ldi	r24, 0x0E	; 14
 18c:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 190:	84 e0       	ldi	r24, 0x04	; 4
 192:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 196:	80 e1       	ldi	r24, 0x10	; 16
 198:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 19c:	88 e0       	ldi	r24, 0x08	; 8
 19e:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 1a2:	84 e0       	ldi	r24, 0x04	; 4
 1a4:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 1a8:	84 e0       	ldi	r24, 0x04	; 4
 1aa:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 1ae:	84 e0       	ldi	r24, 0x04	; 4
 1b0:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 1b4:	61 e0       	ldi	r22, 0x01	; 1
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 1bc:	80 e0       	ldi	r24, 0x00	; 0
 1be:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 1c2:	62 e0       	ldi	r22, 0x02	; 2
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 1d0:	61 e0       	ldi	r22, 0x01	; 1
 1d2:	82 e0       	ldi	r24, 0x02	; 2
 1d4:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 1d8:	82 e0       	ldi	r24, 0x02	; 2
 1da:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 1de:	62 e0       	ldi	r22, 0x02	; 2
 1e0:	82 e0       	ldi	r24, 0x02	; 2
 1e2:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 1e6:	83 e0       	ldi	r24, 0x03	; 3
 1e8:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 1ec:	63 e0       	ldi	r22, 0x03	; 3
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 1f4:	80 e6       	ldi	r24, 0x60	; 96
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 1fc:	9f ef       	ldi	r25, 0xFF	; 255
 1fe:	2d e3       	ldi	r18, 0x3D	; 61
 200:	89 e4       	ldi	r24, 0x49	; 73
 202:	91 50       	subi	r25, 0x01	; 1
 204:	20 40       	sbci	r18, 0x00	; 0
 206:	80 40       	sbci	r24, 0x00	; 0
 208:	e1 f7       	brne	.-8      	; 0x202 <storyTell+0x180>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <storyTell+0x18a>
 20c:	00 00       	nop
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 214:	61 e0       	ldi	r22, 0x01	; 1
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 21c:	8f e7       	ldi	r24, 0x7F	; 127
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 224:	9f ef       	ldi	r25, 0xFF	; 255
 226:	2d e3       	ldi	r18, 0x3D	; 61
 228:	89 e4       	ldi	r24, 0x49	; 73
 22a:	91 50       	subi	r25, 0x01	; 1
 22c:	20 40       	sbci	r18, 0x00	; 0
 22e:	80 40       	sbci	r24, 0x00	; 0
 230:	e1 f7       	brne	.-8      	; 0x22a <storyTell+0x1a8>
 232:	00 c0       	rjmp	.+0      	; 0x234 <storyTell+0x1b2>
 234:	00 00       	nop
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 23c:	61 e0       	ldi	r22, 0x01	; 1
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 244:	8a e9       	ldi	r24, 0x9A	; 154
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 24c:	63 e1       	ldi	r22, 0x13	; 19
 24e:	82 e0       	ldi	r24, 0x02	; 2
 250:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 254:	84 e0       	ldi	r24, 0x04	; 4
 256:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 25a:	64 e1       	ldi	r22, 0x14	; 20
 25c:	82 e0       	ldi	r24, 0x02	; 2
 25e:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 262:	85 e0       	ldi	r24, 0x05	; 5
 264:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 268:	9f ef       	ldi	r25, 0xFF	; 255
 26a:	2d e3       	ldi	r18, 0x3D	; 61
 26c:	89 e4       	ldi	r24, 0x49	; 73
 26e:	91 50       	subi	r25, 0x01	; 1
 270:	20 40       	sbci	r18, 0x00	; 0
 272:	80 40       	sbci	r24, 0x00	; 0
 274:	e1 f7       	brne	.-8      	; 0x26e <storyTell+0x1ec>
 276:	00 c0       	rjmp	.+0      	; 0x278 <storyTell+0x1f6>
 278:	00 00       	nop
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 280:	61 e0       	ldi	r22, 0x01	; 1
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 288:	8e eb       	ldi	r24, 0xBE	; 190
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 290:	9f ef       	ldi	r25, 0xFF	; 255
 292:	2d e3       	ldi	r18, 0x3D	; 61
 294:	89 e4       	ldi	r24, 0x49	; 73
 296:	91 50       	subi	r25, 0x01	; 1
 298:	20 40       	sbci	r18, 0x00	; 0
 29a:	80 40       	sbci	r24, 0x00	; 0
 29c:	e1 f7       	brne	.-8      	; 0x296 <storyTell+0x214>
 29e:	00 c0       	rjmp	.+0      	; 0x2a0 <storyTell+0x21e>
 2a0:	00 00       	nop
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 2a8:	61 e0       	ldi	r22, 0x01	; 1
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 2b0:	83 ed       	ldi	r24, 0xD3	; 211
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 2b8:	9f ef       	ldi	r25, 0xFF	; 255
 2ba:	2d e3       	ldi	r18, 0x3D	; 61
 2bc:	89 e4       	ldi	r24, 0x49	; 73
 2be:	91 50       	subi	r25, 0x01	; 1
 2c0:	20 40       	sbci	r18, 0x00	; 0
 2c2:	80 40       	sbci	r24, 0x00	; 0
 2c4:	e1 f7       	brne	.-8      	; 0x2be <storyTell+0x23c>
 2c6:	00 c0       	rjmp	.+0      	; 0x2c8 <storyTell+0x246>
 2c8:	00 00       	nop
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 2d0:	61 e0       	ldi	r22, 0x01	; 1
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 2d8:	84 ef       	ldi	r24, 0xF4	; 244
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 2e0:	9f ef       	ldi	r25, 0xFF	; 255
 2e2:	2d e3       	ldi	r18, 0x3D	; 61
 2e4:	89 e4       	ldi	r24, 0x49	; 73
 2e6:	91 50       	subi	r25, 0x01	; 1
 2e8:	20 40       	sbci	r18, 0x00	; 0
 2ea:	80 40       	sbci	r24, 0x00	; 0
 2ec:	e1 f7       	brne	.-8      	; 0x2e6 <storyTell+0x264>
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <storyTell+0x26e>
 2f0:	00 00       	nop
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 2f8:	61 e0       	ldi	r22, 0x01	; 1
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 300:	85 e1       	ldi	r24, 0x15	; 21
 302:	91 e0       	ldi	r25, 0x01	; 1
 304:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 308:	9f ef       	ldi	r25, 0xFF	; 255
 30a:	2d e3       	ldi	r18, 0x3D	; 61
 30c:	89 e4       	ldi	r24, 0x49	; 73
 30e:	91 50       	subi	r25, 0x01	; 1
 310:	20 40       	sbci	r18, 0x00	; 0
 312:	80 40       	sbci	r24, 0x00	; 0
 314:	e1 f7       	brne	.-8      	; 0x30e <storyTell+0x28c>
 316:	00 c0       	rjmp	.+0      	; 0x318 <storyTell+0x296>
 318:	00 00       	nop
 31a:	81 e0       	ldi	r24, 0x01	; 1
 31c:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 320:	61 e0       	ldi	r22, 0x01	; 1
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 328:	87 e3       	ldi	r24, 0x37	; 55
 32a:	91 e0       	ldi	r25, 0x01	; 1
 32c:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 330:	9f ef       	ldi	r25, 0xFF	; 255
 332:	2d e3       	ldi	r18, 0x3D	; 61
 334:	89 e4       	ldi	r24, 0x49	; 73
 336:	91 50       	subi	r25, 0x01	; 1
 338:	20 40       	sbci	r18, 0x00	; 0
 33a:	80 40       	sbci	r24, 0x00	; 0
 33c:	e1 f7       	brne	.-8      	; 0x336 <storyTell+0x2b4>
 33e:	00 c0       	rjmp	.+0      	; 0x340 <storyTell+0x2be>
 340:	00 00       	nop
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 348:	61 e0       	ldi	r22, 0x01	; 1
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 350:	8a e4       	ldi	r24, 0x4A	; 74
 352:	91 e0       	ldi	r25, 0x01	; 1
 354:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 358:	9f ef       	ldi	r25, 0xFF	; 255
 35a:	2d e3       	ldi	r18, 0x3D	; 61
 35c:	89 e4       	ldi	r24, 0x49	; 73
 35e:	91 50       	subi	r25, 0x01	; 1
 360:	20 40       	sbci	r18, 0x00	; 0
 362:	80 40       	sbci	r24, 0x00	; 0
 364:	e1 f7       	brne	.-8      	; 0x35e <storyTell+0x2dc>
 366:	00 c0       	rjmp	.+0      	; 0x368 <storyTell+0x2e6>
 368:	00 00       	nop
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 370:	61 e0       	ldi	r22, 0x01	; 1
 372:	81 e0       	ldi	r24, 0x01	; 1
 374:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 378:	8d e6       	ldi	r24, 0x6D	; 109
 37a:	91 e0       	ldi	r25, 0x01	; 1
 37c:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 380:	9f ef       	ldi	r25, 0xFF	; 255
 382:	2d e3       	ldi	r18, 0x3D	; 61
 384:	89 e4       	ldi	r24, 0x49	; 73
 386:	91 50       	subi	r25, 0x01	; 1
 388:	20 40       	sbci	r18, 0x00	; 0
 38a:	80 40       	sbci	r24, 0x00	; 0
 38c:	e1 f7       	brne	.-8      	; 0x386 <storyTell+0x304>
 38e:	00 c0       	rjmp	.+0      	; 0x390 <storyTell+0x30e>
 390:	00 00       	nop
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 398:	61 e0       	ldi	r22, 0x01	; 1
 39a:	81 e0       	ldi	r24, 0x01	; 1
 39c:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 3a0:	86 e8       	ldi	r24, 0x86	; 134
 3a2:	91 e0       	ldi	r25, 0x01	; 1
 3a4:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 3a8:	9f ef       	ldi	r25, 0xFF	; 255
 3aa:	2d e3       	ldi	r18, 0x3D	; 61
 3ac:	89 e4       	ldi	r24, 0x49	; 73
 3ae:	91 50       	subi	r25, 0x01	; 1
 3b0:	20 40       	sbci	r18, 0x00	; 0
 3b2:	80 40       	sbci	r24, 0x00	; 0
 3b4:	e1 f7       	brne	.-8      	; 0x3ae <storyTell+0x32c>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <storyTell+0x336>
 3b8:	00 00       	nop
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 3c0:	61 e0       	ldi	r22, 0x01	; 1
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 3c8:	8e ea       	ldi	r24, 0xAE	; 174
 3ca:	91 e0       	ldi	r25, 0x01	; 1
 3cc:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 3d0:	9f ef       	ldi	r25, 0xFF	; 255
 3d2:	2d e3       	ldi	r18, 0x3D	; 61
 3d4:	89 e4       	ldi	r24, 0x49	; 73
 3d6:	91 50       	subi	r25, 0x01	; 1
 3d8:	20 40       	sbci	r18, 0x00	; 0
 3da:	80 40       	sbci	r24, 0x00	; 0
 3dc:	e1 f7       	brne	.-8      	; 0x3d6 <storyTell+0x354>
 3de:	00 c0       	rjmp	.+0      	; 0x3e0 <storyTell+0x35e>
 3e0:	00 00       	nop
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 3e8:	61 e0       	ldi	r22, 0x01	; 1
 3ea:	81 e0       	ldi	r24, 0x01	; 1
 3ec:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 3f0:	88 ed       	ldi	r24, 0xD8	; 216
 3f2:	91 e0       	ldi	r25, 0x01	; 1
 3f4:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 3f8:	9f ef       	ldi	r25, 0xFF	; 255
 3fa:	2d e3       	ldi	r18, 0x3D	; 61
 3fc:	89 e4       	ldi	r24, 0x49	; 73
 3fe:	91 50       	subi	r25, 0x01	; 1
 400:	20 40       	sbci	r18, 0x00	; 0
 402:	80 40       	sbci	r24, 0x00	; 0
 404:	e1 f7       	brne	.-8      	; 0x3fe <storyTell+0x37c>
 406:	00 c0       	rjmp	.+0      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 408:	00 00       	nop
 40a:	81 e0       	ldi	r24, 0x01	; 1
 40c:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 410:	65 e0       	ldi	r22, 0x05	; 5
 412:	82 e0       	ldi	r24, 0x02	; 2
 414:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 418:	83 ef       	ldi	r24, 0xF3	; 243
 41a:	91 e0       	ldi	r25, 0x01	; 1
 41c:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 420:	9f ef       	ldi	r25, 0xFF	; 255
 422:	2d e3       	ldi	r18, 0x3D	; 61
 424:	89 e4       	ldi	r24, 0x49	; 73
 426:	91 50       	subi	r25, 0x01	; 1
 428:	20 40       	sbci	r18, 0x00	; 0
 42a:	80 40       	sbci	r24, 0x00	; 0
 42c:	e1 f7       	brne	.-8      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 42e:	00 c0       	rjmp	.+0      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 430:	00 00       	nop
 432:	81 e0       	ldi	r24, 0x01	; 1
 434:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 438:	61 e0       	ldi	r22, 0x01	; 1
 43a:	81 e0       	ldi	r24, 0x01	; 1
 43c:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 440:	88 e0       	ldi	r24, 0x08	; 8
 442:	92 e0       	ldi	r25, 0x02	; 2
 444:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 448:	9f ef       	ldi	r25, 0xFF	; 255
 44a:	2d e3       	ldi	r18, 0x3D	; 61
 44c:	89 e4       	ldi	r24, 0x49	; 73
 44e:	91 50       	subi	r25, 0x01	; 1
 450:	20 40       	sbci	r18, 0x00	; 0
 452:	80 40       	sbci	r24, 0x00	; 0
 454:	e1 f7       	brne	.-8      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 456:	00 c0       	rjmp	.+0      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 458:	00 00       	nop
 45a:	81 e0       	ldi	r24, 0x01	; 1
 45c:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 460:	64 e0       	ldi	r22, 0x04	; 4
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 468:	8a e1       	ldi	r24, 0x1A	; 26
 46a:	92 e0       	ldi	r25, 0x02	; 2
 46c:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_SEND_STRING>
 470:	9f ef       	ldi	r25, 0xFF	; 255
 472:	2d e3       	ldi	r18, 0x3D	; 61
 474:	89 e4       	ldi	r24, 0x49	; 73
 476:	91 50       	subi	r25, 0x01	; 1
 478:	20 40       	sbci	r18, 0x00	; 0
 47a:	80 40       	sbci	r24, 0x00	; 0
 47c:	e1 f7       	brne	.-8      	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 47e:	00 c0       	rjmp	.+0      	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 480:	00 00       	nop
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 488:	61 e0       	ldi	r22, 0x01	; 1
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	0e 94 c9 03 	call	0x792	; 0x792 <LCD_MOVE_CURSOR>
 490:	08 95       	ret

00000492 <main>:
 492:	0e 94 f5 03 	call	0x7ea	; 0x7ea <DIO_init>
 496:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <LCD_INIT>
 49a:	2f ef       	ldi	r18, 0xFF	; 255
 49c:	89 e6       	ldi	r24, 0x69	; 105
 49e:	98 e1       	ldi	r25, 0x18	; 24
 4a0:	21 50       	subi	r18, 0x01	; 1
 4a2:	80 40       	sbci	r24, 0x00	; 0
 4a4:	90 40       	sbci	r25, 0x00	; 0
 4a6:	e1 f7       	brne	.-8      	; 0x4a0 <main+0xe>
 4a8:	00 c0       	rjmp	.+0      	; 0x4aa <main+0x18>
 4aa:	00 00       	nop
 4ac:	0e 94 41 00 	call	0x82	; 0x82 <storyTell>
 4b0:	fd cf       	rjmp	.-6      	; 0x4ac <main+0x1a>

000004b2 <LCD_instruction>:
 4b2:	cf 93       	push	r28
 4b4:	c8 2f       	mov	r28, r24
 4b6:	40 e0       	ldi	r20, 0x00	; 0
 4b8:	63 e0       	ldi	r22, 0x03	; 3
 4ba:	80 e0       	ldi	r24, 0x00	; 0
 4bc:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 4c0:	4c 2f       	mov	r20, r28
 4c2:	40 71       	andi	r20, 0x10	; 16
 4c4:	50 e0       	ldi	r21, 0x00	; 0
 4c6:	55 95       	asr	r21
 4c8:	47 95       	ror	r20
 4ca:	55 95       	asr	r21
 4cc:	47 95       	ror	r20
 4ce:	55 95       	asr	r21
 4d0:	47 95       	ror	r20
 4d2:	55 95       	asr	r21
 4d4:	47 95       	ror	r20
 4d6:	60 e0       	ldi	r22, 0x00	; 0
 4d8:	81 e0       	ldi	r24, 0x01	; 1
 4da:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 4de:	4c 2f       	mov	r20, r28
 4e0:	40 72       	andi	r20, 0x20	; 32
 4e2:	50 e0       	ldi	r21, 0x00	; 0
 4e4:	55 95       	asr	r21
 4e6:	47 95       	ror	r20
 4e8:	55 95       	asr	r21
 4ea:	47 95       	ror	r20
 4ec:	55 95       	asr	r21
 4ee:	47 95       	ror	r20
 4f0:	55 95       	asr	r21
 4f2:	47 95       	ror	r20
 4f4:	55 95       	asr	r21
 4f6:	47 95       	ror	r20
 4f8:	61 e0       	ldi	r22, 0x01	; 1
 4fa:	81 e0       	ldi	r24, 0x01	; 1
 4fc:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 500:	4c 2f       	mov	r20, r28
 502:	40 74       	andi	r20, 0x40	; 64
 504:	50 e0       	ldi	r21, 0x00	; 0
 506:	04 2e       	mov	r0, r20
 508:	45 2f       	mov	r20, r21
 50a:	00 0c       	add	r0, r0
 50c:	44 1f       	adc	r20, r20
 50e:	55 0b       	sbc	r21, r21
 510:	00 0c       	add	r0, r0
 512:	44 1f       	adc	r20, r20
 514:	55 1f       	adc	r21, r21
 516:	62 e0       	ldi	r22, 0x02	; 2
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 51e:	4c 2f       	mov	r20, r28
 520:	44 1f       	adc	r20, r20
 522:	44 27       	eor	r20, r20
 524:	44 1f       	adc	r20, r20
 526:	64 e0       	ldi	r22, 0x04	; 4
 528:	81 e0       	ldi	r24, 0x01	; 1
 52a:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 52e:	41 e0       	ldi	r20, 0x01	; 1
 530:	62 e0       	ldi	r22, 0x02	; 2
 532:	80 e0       	ldi	r24, 0x00	; 0
 534:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 538:	83 ef       	ldi	r24, 0xF3	; 243
 53a:	91 e0       	ldi	r25, 0x01	; 1
 53c:	01 97       	sbiw	r24, 0x01	; 1
 53e:	f1 f7       	brne	.-4      	; 0x53c <LCD_instruction+0x8a>
 540:	00 c0       	rjmp	.+0      	; 0x542 <LCD_instruction+0x90>
 542:	00 00       	nop
 544:	40 e0       	ldi	r20, 0x00	; 0
 546:	62 e0       	ldi	r22, 0x02	; 2
 548:	80 e0       	ldi	r24, 0x00	; 0
 54a:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 54e:	83 ef       	ldi	r24, 0xF3	; 243
 550:	91 e0       	ldi	r25, 0x01	; 1
 552:	01 97       	sbiw	r24, 0x01	; 1
 554:	f1 f7       	brne	.-4      	; 0x552 <LCD_instruction+0xa0>
 556:	00 c0       	rjmp	.+0      	; 0x558 <LCD_instruction+0xa6>
 558:	00 00       	nop
 55a:	4c 2f       	mov	r20, r28
 55c:	41 70       	andi	r20, 0x01	; 1
 55e:	60 e0       	ldi	r22, 0x00	; 0
 560:	81 e0       	ldi	r24, 0x01	; 1
 562:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 566:	4c 2f       	mov	r20, r28
 568:	42 70       	andi	r20, 0x02	; 2
 56a:	50 e0       	ldi	r21, 0x00	; 0
 56c:	55 95       	asr	r21
 56e:	47 95       	ror	r20
 570:	61 e0       	ldi	r22, 0x01	; 1
 572:	81 e0       	ldi	r24, 0x01	; 1
 574:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 578:	4c 2f       	mov	r20, r28
 57a:	44 70       	andi	r20, 0x04	; 4
 57c:	50 e0       	ldi	r21, 0x00	; 0
 57e:	55 95       	asr	r21
 580:	47 95       	ror	r20
 582:	55 95       	asr	r21
 584:	47 95       	ror	r20
 586:	62 e0       	ldi	r22, 0x02	; 2
 588:	81 e0       	ldi	r24, 0x01	; 1
 58a:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 58e:	c8 70       	andi	r28, 0x08	; 8
 590:	4c 2f       	mov	r20, r28
 592:	50 e0       	ldi	r21, 0x00	; 0
 594:	55 95       	asr	r21
 596:	47 95       	ror	r20
 598:	55 95       	asr	r21
 59a:	47 95       	ror	r20
 59c:	55 95       	asr	r21
 59e:	47 95       	ror	r20
 5a0:	64 e0       	ldi	r22, 0x04	; 4
 5a2:	81 e0       	ldi	r24, 0x01	; 1
 5a4:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 5a8:	41 e0       	ldi	r20, 0x01	; 1
 5aa:	62 e0       	ldi	r22, 0x02	; 2
 5ac:	80 e0       	ldi	r24, 0x00	; 0
 5ae:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 5b2:	83 ef       	ldi	r24, 0xF3	; 243
 5b4:	91 e0       	ldi	r25, 0x01	; 1
 5b6:	01 97       	sbiw	r24, 0x01	; 1
 5b8:	f1 f7       	brne	.-4      	; 0x5b6 <LCD_instruction+0x104>
 5ba:	00 c0       	rjmp	.+0      	; 0x5bc <LCD_instruction+0x10a>
 5bc:	00 00       	nop
 5be:	40 e0       	ldi	r20, 0x00	; 0
 5c0:	62 e0       	ldi	r22, 0x02	; 2
 5c2:	80 e0       	ldi	r24, 0x00	; 0
 5c4:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 5c8:	83 ef       	ldi	r24, 0xF3	; 243
 5ca:	91 e0       	ldi	r25, 0x01	; 1
 5cc:	01 97       	sbiw	r24, 0x01	; 1
 5ce:	f1 f7       	brne	.-4      	; 0x5cc <LCD_instruction+0x11a>
 5d0:	00 c0       	rjmp	.+0      	; 0x5d2 <LCD_instruction+0x120>
 5d2:	00 00       	nop
 5d4:	cf 91       	pop	r28
 5d6:	08 95       	ret

000005d8 <LCD_INIT>:
 5d8:	8f e0       	ldi	r24, 0x0F	; 15
 5da:	97 e2       	ldi	r25, 0x27	; 39
 5dc:	01 97       	sbiw	r24, 0x01	; 1
 5de:	f1 f7       	brne	.-4      	; 0x5dc <LCD_INIT+0x4>
 5e0:	00 c0       	rjmp	.+0      	; 0x5e2 <LCD_INIT+0xa>
 5e2:	00 00       	nop
 5e4:	83 e3       	ldi	r24, 0x33	; 51
 5e6:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 5ea:	89 ef       	ldi	r24, 0xF9	; 249
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	01 97       	sbiw	r24, 0x01	; 1
 5f0:	f1 f7       	brne	.-4      	; 0x5ee <LCD_INIT+0x16>
 5f2:	00 c0       	rjmp	.+0      	; 0x5f4 <LCD_INIT+0x1c>
 5f4:	00 00       	nop
 5f6:	82 e3       	ldi	r24, 0x32	; 50
 5f8:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 5fc:	89 ef       	ldi	r24, 0xF9	; 249
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	01 97       	sbiw	r24, 0x01	; 1
 602:	f1 f7       	brne	.-4      	; 0x600 <LCD_INIT+0x28>
 604:	00 c0       	rjmp	.+0      	; 0x606 <LCD_INIT+0x2e>
 606:	00 00       	nop
 608:	88 e2       	ldi	r24, 0x28	; 40
 60a:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 60e:	89 ef       	ldi	r24, 0xF9	; 249
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	01 97       	sbiw	r24, 0x01	; 1
 614:	f1 f7       	brne	.-4      	; 0x612 <LCD_INIT+0x3a>
 616:	00 c0       	rjmp	.+0      	; 0x618 <LCD_INIT+0x40>
 618:	00 00       	nop
 61a:	8c e0       	ldi	r24, 0x0C	; 12
 61c:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 620:	89 ef       	ldi	r24, 0xF9	; 249
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	01 97       	sbiw	r24, 0x01	; 1
 626:	f1 f7       	brne	.-4      	; 0x624 <LCD_INIT+0x4c>
 628:	00 c0       	rjmp	.+0      	; 0x62a <LCD_INIT+0x52>
 62a:	00 00       	nop
 62c:	81 e0       	ldi	r24, 0x01	; 1
 62e:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 632:	89 ef       	ldi	r24, 0xF9	; 249
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	01 97       	sbiw	r24, 0x01	; 1
 638:	f1 f7       	brne	.-4      	; 0x636 <LCD_INIT+0x5e>
 63a:	00 c0       	rjmp	.+0      	; 0x63c <LCD_INIT+0x64>
 63c:	00 00       	nop
 63e:	82 e0       	ldi	r24, 0x02	; 2
 640:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 644:	89 ef       	ldi	r24, 0xF9	; 249
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	01 97       	sbiw	r24, 0x01	; 1
 64a:	f1 f7       	brne	.-4      	; 0x648 <LCD_INIT+0x70>
 64c:	00 c0       	rjmp	.+0      	; 0x64e <LCD_INIT+0x76>
 64e:	00 00       	nop
 650:	08 95       	ret

00000652 <LCD_write_char>:
 652:	cf 93       	push	r28
 654:	c8 2f       	mov	r28, r24
 656:	41 e0       	ldi	r20, 0x01	; 1
 658:	63 e0       	ldi	r22, 0x03	; 3
 65a:	80 e0       	ldi	r24, 0x00	; 0
 65c:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 660:	4c 2f       	mov	r20, r28
 662:	40 71       	andi	r20, 0x10	; 16
 664:	50 e0       	ldi	r21, 0x00	; 0
 666:	55 95       	asr	r21
 668:	47 95       	ror	r20
 66a:	55 95       	asr	r21
 66c:	47 95       	ror	r20
 66e:	55 95       	asr	r21
 670:	47 95       	ror	r20
 672:	55 95       	asr	r21
 674:	47 95       	ror	r20
 676:	60 e0       	ldi	r22, 0x00	; 0
 678:	81 e0       	ldi	r24, 0x01	; 1
 67a:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 67e:	4c 2f       	mov	r20, r28
 680:	40 72       	andi	r20, 0x20	; 32
 682:	50 e0       	ldi	r21, 0x00	; 0
 684:	55 95       	asr	r21
 686:	47 95       	ror	r20
 688:	55 95       	asr	r21
 68a:	47 95       	ror	r20
 68c:	55 95       	asr	r21
 68e:	47 95       	ror	r20
 690:	55 95       	asr	r21
 692:	47 95       	ror	r20
 694:	55 95       	asr	r21
 696:	47 95       	ror	r20
 698:	61 e0       	ldi	r22, 0x01	; 1
 69a:	81 e0       	ldi	r24, 0x01	; 1
 69c:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 6a0:	4c 2f       	mov	r20, r28
 6a2:	40 74       	andi	r20, 0x40	; 64
 6a4:	50 e0       	ldi	r21, 0x00	; 0
 6a6:	04 2e       	mov	r0, r20
 6a8:	45 2f       	mov	r20, r21
 6aa:	00 0c       	add	r0, r0
 6ac:	44 1f       	adc	r20, r20
 6ae:	55 0b       	sbc	r21, r21
 6b0:	00 0c       	add	r0, r0
 6b2:	44 1f       	adc	r20, r20
 6b4:	55 1f       	adc	r21, r21
 6b6:	62 e0       	ldi	r22, 0x02	; 2
 6b8:	81 e0       	ldi	r24, 0x01	; 1
 6ba:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 6be:	4c 2f       	mov	r20, r28
 6c0:	44 1f       	adc	r20, r20
 6c2:	44 27       	eor	r20, r20
 6c4:	44 1f       	adc	r20, r20
 6c6:	64 e0       	ldi	r22, 0x04	; 4
 6c8:	81 e0       	ldi	r24, 0x01	; 1
 6ca:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 6ce:	41 e0       	ldi	r20, 0x01	; 1
 6d0:	62 e0       	ldi	r22, 0x02	; 2
 6d2:	80 e0       	ldi	r24, 0x00	; 0
 6d4:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 6d8:	83 ef       	ldi	r24, 0xF3	; 243
 6da:	91 e0       	ldi	r25, 0x01	; 1
 6dc:	01 97       	sbiw	r24, 0x01	; 1
 6de:	f1 f7       	brne	.-4      	; 0x6dc <LCD_write_char+0x8a>
 6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <LCD_write_char+0x90>
 6e2:	00 00       	nop
 6e4:	40 e0       	ldi	r20, 0x00	; 0
 6e6:	62 e0       	ldi	r22, 0x02	; 2
 6e8:	80 e0       	ldi	r24, 0x00	; 0
 6ea:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 6ee:	83 ef       	ldi	r24, 0xF3	; 243
 6f0:	91 e0       	ldi	r25, 0x01	; 1
 6f2:	01 97       	sbiw	r24, 0x01	; 1
 6f4:	f1 f7       	brne	.-4      	; 0x6f2 <LCD_write_char+0xa0>
 6f6:	00 c0       	rjmp	.+0      	; 0x6f8 <LCD_write_char+0xa6>
 6f8:	00 00       	nop
 6fa:	4c 2f       	mov	r20, r28
 6fc:	41 70       	andi	r20, 0x01	; 1
 6fe:	60 e0       	ldi	r22, 0x00	; 0
 700:	81 e0       	ldi	r24, 0x01	; 1
 702:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 706:	4c 2f       	mov	r20, r28
 708:	42 70       	andi	r20, 0x02	; 2
 70a:	50 e0       	ldi	r21, 0x00	; 0
 70c:	55 95       	asr	r21
 70e:	47 95       	ror	r20
 710:	61 e0       	ldi	r22, 0x01	; 1
 712:	81 e0       	ldi	r24, 0x01	; 1
 714:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 718:	4c 2f       	mov	r20, r28
 71a:	44 70       	andi	r20, 0x04	; 4
 71c:	50 e0       	ldi	r21, 0x00	; 0
 71e:	55 95       	asr	r21
 720:	47 95       	ror	r20
 722:	55 95       	asr	r21
 724:	47 95       	ror	r20
 726:	62 e0       	ldi	r22, 0x02	; 2
 728:	81 e0       	ldi	r24, 0x01	; 1
 72a:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 72e:	c8 70       	andi	r28, 0x08	; 8
 730:	4c 2f       	mov	r20, r28
 732:	50 e0       	ldi	r21, 0x00	; 0
 734:	55 95       	asr	r21
 736:	47 95       	ror	r20
 738:	55 95       	asr	r21
 73a:	47 95       	ror	r20
 73c:	55 95       	asr	r21
 73e:	47 95       	ror	r20
 740:	64 e0       	ldi	r22, 0x04	; 4
 742:	81 e0       	ldi	r24, 0x01	; 1
 744:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 748:	41 e0       	ldi	r20, 0x01	; 1
 74a:	62 e0       	ldi	r22, 0x02	; 2
 74c:	80 e0       	ldi	r24, 0x00	; 0
 74e:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 752:	83 ef       	ldi	r24, 0xF3	; 243
 754:	91 e0       	ldi	r25, 0x01	; 1
 756:	01 97       	sbiw	r24, 0x01	; 1
 758:	f1 f7       	brne	.-4      	; 0x756 <LCD_write_char+0x104>
 75a:	00 c0       	rjmp	.+0      	; 0x75c <LCD_write_char+0x10a>
 75c:	00 00       	nop
 75e:	40 e0       	ldi	r20, 0x00	; 0
 760:	62 e0       	ldi	r22, 0x02	; 2
 762:	80 e0       	ldi	r24, 0x00	; 0
 764:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <DIO_SetPinVal>
 768:	83 ef       	ldi	r24, 0xF3	; 243
 76a:	91 e0       	ldi	r25, 0x01	; 1
 76c:	01 97       	sbiw	r24, 0x01	; 1
 76e:	f1 f7       	brne	.-4      	; 0x76c <LCD_write_char+0x11a>
 770:	00 c0       	rjmp	.+0      	; 0x772 <LCD_write_char+0x120>
 772:	00 00       	nop
 774:	cf 91       	pop	r28
 776:	08 95       	ret

00000778 <LCD_SEND_STRING>:
 778:	cf 93       	push	r28
 77a:	df 93       	push	r29
 77c:	ec 01       	movw	r28, r24
 77e:	03 c0       	rjmp	.+6      	; 0x786 <LCD_SEND_STRING+0xe>
 780:	0e 94 29 03 	call	0x652	; 0x652 <LCD_write_char>
 784:	21 96       	adiw	r28, 0x01	; 1
 786:	88 81       	ld	r24, Y
 788:	81 11       	cpse	r24, r1
 78a:	fa cf       	rjmp	.-12     	; 0x780 <LCD_SEND_STRING+0x8>
 78c:	df 91       	pop	r29
 78e:	cf 91       	pop	r28
 790:	08 95       	ret

00000792 <LCD_MOVE_CURSOR>:
	//Rows Range (1,2)
	//Columns Range (1,16)
	//Function that updates Address Counter (AC)
	
	unsigned char data = 0x80;
	if(row>4||row<1||column>20||column<1)
 792:	9f ef       	ldi	r25, 0xFF	; 255
 794:	98 0f       	add	r25, r24
 796:	94 30       	cpi	r25, 0x04	; 4
 798:	c0 f4       	brcc	.+48     	; 0x7ca <LCD_MOVE_CURSOR+0x38>
 79a:	65 31       	cpi	r22, 0x15	; 21
 79c:	c0 f4       	brcc	.+48     	; 0x7ce <LCD_MOVE_CURSOR+0x3c>
 79e:	66 23       	and	r22, r22
 7a0:	c1 f0       	breq	.+48     	; 0x7d2 <LCD_MOVE_CURSOR+0x40>
	{
		data=0x80;                       //Upper Left Location on Screen
	}
	else if(row==1)
 7a2:	81 30       	cpi	r24, 0x01	; 1
 7a4:	19 f4       	brne	.+6      	; 0x7ac <LCD_MOVE_CURSOR+0x1a>
	{
		data=0x80+column-1 ;
 7a6:	8f e7       	ldi	r24, 0x7F	; 127
 7a8:	86 0f       	add	r24, r22
 7aa:	16 c0       	rjmp	.+44     	; 0x7d8 <LCD_MOVE_CURSOR+0x46>
	}
	else if (row==2)
 7ac:	82 30       	cpi	r24, 0x02	; 2
 7ae:	19 f4       	brne	.+6      	; 0x7b6 <LCD_MOVE_CURSOR+0x24>
	{
		data=0xc0+column-1;
 7b0:	8f eb       	ldi	r24, 0xBF	; 191
 7b2:	86 0f       	add	r24, r22
 7b4:	11 c0       	rjmp	.+34     	; 0x7d8 <LCD_MOVE_CURSOR+0x46>
	}
	else if(row==3)
 7b6:	83 30       	cpi	r24, 0x03	; 3
 7b8:	19 f4       	brne	.+6      	; 0x7c0 <LCD_MOVE_CURSOR+0x2e>
	{
		data=0x94+column-1 ;
 7ba:	83 e9       	ldi	r24, 0x93	; 147
 7bc:	86 0f       	add	r24, r22
 7be:	0c c0       	rjmp	.+24     	; 0x7d8 <LCD_MOVE_CURSOR+0x46>
	}
	else if (row==4)
 7c0:	84 30       	cpi	r24, 0x04	; 4
 7c2:	49 f4       	brne	.+18     	; 0x7d6 <LCD_MOVE_CURSOR+0x44>
	{
		data=0xD4+column-1;
 7c4:	83 ed       	ldi	r24, 0xD3	; 211
 7c6:	86 0f       	add	r24, r22
 7c8:	07 c0       	rjmp	.+14     	; 0x7d8 <LCD_MOVE_CURSOR+0x46>
	//Function that updates Address Counter (AC)
	
	unsigned char data = 0x80;
	if(row>4||row<1||column>20||column<1)
	{
		data=0x80;                       //Upper Left Location on Screen
 7ca:	80 e8       	ldi	r24, 0x80	; 128
 7cc:	05 c0       	rjmp	.+10     	; 0x7d8 <LCD_MOVE_CURSOR+0x46>
 7ce:	80 e8       	ldi	r24, 0x80	; 128
 7d0:	03 c0       	rjmp	.+6      	; 0x7d8 <LCD_MOVE_CURSOR+0x46>
 7d2:	80 e8       	ldi	r24, 0x80	; 128
 7d4:	01 c0       	rjmp	.+2      	; 0x7d8 <LCD_MOVE_CURSOR+0x46>
{
	//Rows Range (1,2)
	//Columns Range (1,16)
	//Function that updates Address Counter (AC)
	
	unsigned char data = 0x80;
 7d6:	80 e8       	ldi	r24, 0x80	; 128
	}
	else if (row==4)
	{
		data=0xD4+column-1;
	}
	LCD_instruction(data);
 7d8:	0e 94 59 02 	call	0x4b2	; 0x4b2 <LCD_instruction>
 7dc:	89 ef       	ldi	r24, 0xF9	; 249
 7de:	90 e0       	ldi	r25, 0x00	; 0
 7e0:	01 97       	sbiw	r24, 0x01	; 1
 7e2:	f1 f7       	brne	.-4      	; 0x7e0 <LCD_MOVE_CURSOR+0x4e>
 7e4:	00 c0       	rjmp	.+0      	; 0x7e6 <LCD_MOVE_CURSOR+0x54>
 7e6:	00 00       	nop
 7e8:	08 95       	ret

000007ea <DIO_init>:
#include "DIO_config.h"


void DIO_init()
{
	DDRA = conc_Bits(DDRAPIN7 , DDRAPIN6, DDRAPIN5, DDRAPIN4, DDRAPIN3, DDRAPIN2,DDRAPIN1,DDRAPIN0);
 7ea:	8f ef       	ldi	r24, 0xFF	; 255
 7ec:	8a bb       	out	0x1a, r24	; 26
	DDRB = conc_Bits(DDRBPIN7 , DDRBPIN6, DDRBPIN5, DDRBPIN4, DDRBPIN3, DDRBPIN2,DDRBPIN1,DDRBPIN0);
 7ee:	87 bb       	out	0x17, r24	; 23
	DDRC = conc_Bits(DDRCPIN7 , DDRCPIN6, DDRCPIN5, DDRCPIN4, DDRCPIN3, DDRCPIN2,DDRCPIN1,DDRCPIN0);
 7f0:	90 ef       	ldi	r25, 0xF0	; 240
 7f2:	94 bb       	out	0x14, r25	; 20
	DDRD = conc_Bits(DDRDPIN7 , DDRDPIN6, DDRDPIN5, DDRDPIN4, DDRDPIN3, DDRDPIN2,DDRDPIN1,DDRDPIN0);
 7f4:	81 bb       	out	0x11, r24	; 17
 7f6:	08 95       	ret

000007f8 <DIO_SetPinVal>:
}


void DIO_SetPinVal(u8 portName, u8 pinNum, u8 val)
{
	switch(portName)
 7f8:	81 30       	cpi	r24, 0x01	; 1
 7fa:	01 f1       	breq	.+64     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 7fc:	30 f0       	brcs	.+12     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 7fe:	82 30       	cpi	r24, 0x02	; 2
 800:	b1 f1       	breq	.+108    	; 0x86e <__stack+0xf>
 802:	83 30       	cpi	r24, 0x03	; 3
 804:	09 f4       	brne	.+2      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 806:	4c c0       	rjmp	.+152    	; 0x8a0 <__stack+0x41>
 808:	08 95       	ret
	{
		case PA:
				if(val == 1) {SET_BIT(PORTA, pinNum);}
 80a:	41 30       	cpi	r20, 0x01	; 1
 80c:	59 f4       	brne	.+22     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 80e:	2b b3       	in	r18, 0x1b	; 27
 810:	81 e0       	ldi	r24, 0x01	; 1
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	02 c0       	rjmp	.+4      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 816:	88 0f       	add	r24, r24
 818:	99 1f       	adc	r25, r25
 81a:	6a 95       	dec	r22
 81c:	e2 f7       	brpl	.-8      	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 81e:	82 2b       	or	r24, r18
 820:	8b bb       	out	0x1b, r24	; 27
 822:	08 95       	ret
				else         {CLR_BIT(PORTA, pinNum);}	
 824:	2b b3       	in	r18, 0x1b	; 27
 826:	81 e0       	ldi	r24, 0x01	; 1
 828:	90 e0       	ldi	r25, 0x00	; 0
 82a:	02 c0       	rjmp	.+4      	; 0x830 <__DATA_REGION_LENGTH__+0x30>
 82c:	88 0f       	add	r24, r24
 82e:	99 1f       	adc	r25, r25
 830:	6a 95       	dec	r22
 832:	e2 f7       	brpl	.-8      	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 834:	80 95       	com	r24
 836:	82 23       	and	r24, r18
 838:	8b bb       	out	0x1b, r24	; 27
 83a:	08 95       	ret
				break;
		case PB:
				if(val == 1) {SET_BIT(PORTB, pinNum);}
 83c:	41 30       	cpi	r20, 0x01	; 1
 83e:	59 f4       	brne	.+22     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 840:	28 b3       	in	r18, 0x18	; 24
 842:	81 e0       	ldi	r24, 0x01	; 1
 844:	90 e0       	ldi	r25, 0x00	; 0
 846:	02 c0       	rjmp	.+4      	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 848:	88 0f       	add	r24, r24
 84a:	99 1f       	adc	r25, r25
 84c:	6a 95       	dec	r22
 84e:	e2 f7       	brpl	.-8      	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 850:	82 2b       	or	r24, r18
 852:	88 bb       	out	0x18, r24	; 24
 854:	08 95       	ret
				else         {CLR_BIT(PORTB, pinNum);}	
 856:	28 b3       	in	r18, 0x18	; 24
 858:	81 e0       	ldi	r24, 0x01	; 1
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	02 c0       	rjmp	.+4      	; 0x862 <__stack+0x3>
 85e:	88 0f       	add	r24, r24
 860:	99 1f       	adc	r25, r25
 862:	6a 95       	dec	r22
 864:	e2 f7       	brpl	.-8      	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
 866:	80 95       	com	r24
 868:	82 23       	and	r24, r18
 86a:	88 bb       	out	0x18, r24	; 24
 86c:	08 95       	ret
				break;
		case PC:
				if(val == 1) {SET_BIT(PORTC, pinNum);}
 86e:	41 30       	cpi	r20, 0x01	; 1
 870:	59 f4       	brne	.+22     	; 0x888 <__stack+0x29>
 872:	25 b3       	in	r18, 0x15	; 21
 874:	81 e0       	ldi	r24, 0x01	; 1
 876:	90 e0       	ldi	r25, 0x00	; 0
 878:	02 c0       	rjmp	.+4      	; 0x87e <__stack+0x1f>
 87a:	88 0f       	add	r24, r24
 87c:	99 1f       	adc	r25, r25
 87e:	6a 95       	dec	r22
 880:	e2 f7       	brpl	.-8      	; 0x87a <__stack+0x1b>
 882:	82 2b       	or	r24, r18
 884:	85 bb       	out	0x15, r24	; 21
 886:	08 95       	ret
				else         {CLR_BIT(PORTC, pinNum);}	
 888:	25 b3       	in	r18, 0x15	; 21
 88a:	81 e0       	ldi	r24, 0x01	; 1
 88c:	90 e0       	ldi	r25, 0x00	; 0
 88e:	02 c0       	rjmp	.+4      	; 0x894 <__stack+0x35>
 890:	88 0f       	add	r24, r24
 892:	99 1f       	adc	r25, r25
 894:	6a 95       	dec	r22
 896:	e2 f7       	brpl	.-8      	; 0x890 <__stack+0x31>
 898:	80 95       	com	r24
 89a:	82 23       	and	r24, r18
 89c:	85 bb       	out	0x15, r24	; 21
 89e:	08 95       	ret
				break;
		case PD:
				if(val == 1) {SET_BIT(PORTD, pinNum);}
 8a0:	41 30       	cpi	r20, 0x01	; 1
 8a2:	59 f4       	brne	.+22     	; 0x8ba <__stack+0x5b>
 8a4:	22 b3       	in	r18, 0x12	; 18
 8a6:	81 e0       	ldi	r24, 0x01	; 1
 8a8:	90 e0       	ldi	r25, 0x00	; 0
 8aa:	02 c0       	rjmp	.+4      	; 0x8b0 <__stack+0x51>
 8ac:	88 0f       	add	r24, r24
 8ae:	99 1f       	adc	r25, r25
 8b0:	6a 95       	dec	r22
 8b2:	e2 f7       	brpl	.-8      	; 0x8ac <__stack+0x4d>
 8b4:	82 2b       	or	r24, r18
 8b6:	82 bb       	out	0x12, r24	; 18
 8b8:	08 95       	ret
				else         {CLR_BIT(PORTD, pinNum);}	
 8ba:	22 b3       	in	r18, 0x12	; 18
 8bc:	81 e0       	ldi	r24, 0x01	; 1
 8be:	90 e0       	ldi	r25, 0x00	; 0
 8c0:	02 c0       	rjmp	.+4      	; 0x8c6 <__stack+0x67>
 8c2:	88 0f       	add	r24, r24
 8c4:	99 1f       	adc	r25, r25
 8c6:	6a 95       	dec	r22
 8c8:	e2 f7       	brpl	.-8      	; 0x8c2 <__stack+0x63>
 8ca:	80 95       	com	r24
 8cc:	82 23       	and	r24, r18
 8ce:	82 bb       	out	0x12, r24	; 18
 8d0:	08 95       	ret

000008d2 <_exit>:
 8d2:	f8 94       	cli

000008d4 <__stop_program>:
 8d4:	ff cf       	rjmp	.-2      	; 0x8d4 <__stop_program>
